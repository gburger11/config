""""""""""""""""""""""""""""""""""""""""""""""""""  " 
" Todos
""""""""""""""""""""""""""""""""""""""""""""""""""

" for installing vundle:
" git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim

" Make sure to call :PluginInstall in vim after changing the list

" For YouCompleteMe, you must install afterwards:
" cd ~/.vim/bundle/YouCompleteMe
" ./install.py --clang-completer
" or on ubuntu 16:
" python3 ./install.py --clang-completer


""""""""""""""""""""""""""""""""""""""""""""""""""
" Integration of pluggins
""""""""""""""""""""""""""""""""""""""""""""""""""

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" PLUGIN INSTALLER
Plugin 'gmarik/Vundle.vim'

" COLORTHEMES
Plugin 'sickill/vim-monokai'
"Bundle 'zeis/vim-kolor'
"Bundle 'altercation/vim-colors-solarized'
" Plugin 'octol/vim-cpp-enhanced-highlight'
Plugin 'blueyed/vim-diminactive'
Plugin 'luochen1990/rainbow'

" FILE EXPLORER AND SEARCH
Plugin 'scrooloose/nerdtree'
Bundle 'ctrlpvim/ctrlp.vim'
Plugin 'mileszs/ack.vim'

" WINDOW TO HELP NAVIGATE THROUGH FILE WITH TAGS
Plugin 'majutsushi/tagbar'

" BUFFER HANDLER
Plugin 'jlanzarotta/bufexplorer'
Plugin 'muziqiushan/vim-bufonly'
Plugin 'vim-scripts/scratch.vim'

" SNIPPETS
Bundle 'SirVer/ultisnips'
Bundle 'honza/vim-snippets'

" SYNTAX CONTROLLER AND AUTOCOMPLETION
" Bundle 'scrooloose/syntastic'
Bundle 'maralla/validator.vim'
" Plugin 'w0rp/ale'
Bundle 'Valloric/YouCompleteMe'
Plugin 'congma/pylint.vim'
Plugin 'tell-k/vim-autopep8'

" COPY THROUGH TMUX
Bundle 'jpalardy/vim-slime'

" SMOOTH MOTION TO HELP READING THROUGH
Bundle 'terryma/vim-smooth-scroll'

" HELP TO MOVE ARROUND IN A FILE
"Bundle 'tpope/vim-surround' TODO configure for bépo
Bundle 'easymotion/vim-easymotion'
Plugin 'rbong/vim-vertical'
Plugin 'tpope/vim-surround'

" LAUNCH GIT FUNCTIONS IN VIM
Bundle 'tpope/vim-fugitive'
Plugin 'shumphrey/fugitive-gitlab.vim' " TODO debug

" INDENT CLARIFICATION WITH | AND ¦
Plugin 'Yggdroot/indentLine'
Plugin 'Vimjas/vim-python-pep8-indent'

" TEXT OBJECTS
Plugin 'michaeljsmith/vim-indent-object'
Plugin 'vim-scripts/camelcasemotion'

" COMMENT
Plugin 'scrooloose/nerdcommenter'

" Easy switch btw true and false
Plugin 'AndrewRadev/switch.vim'
" Align things
Plugin 'godlygeek/tabular'


" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)
" All of your Plugins must be added before the following line

call vundle#end()            " required
filetype plugin indent on    " requiredenable syntax highlighting
filetype plugin on


""""""""""""""""""""""""""""""""""""""""""""""""
" tag bar
""""""""""""""""""""""""""""""""""""""""""""""""
nmap <silent> àg :TagbarOpen fj<CR>
nmap <silent> àk :TagbarClose<CR>
let g:tagbar_map_togglesort = 'è'
let g:tagbar_map_toggleautoclose = 'a'
let g:tagbar_sort = 0


""""""""""""""""""""""""""""""""""""""""""""""""
" configuration for nerdtree
""""""""""""""""""""""""""""""""""""""""""""""""
" active tree shortcut
map <silent> àf :NERDTreeFocus<CR>
map <silent> àx :NERDTreeClose<CR>
let g:NERDTreeMapOpenInTab = 'l'
let g:NERDTreeMapOpenInTabSilent = 'gl'
let g:NERDTreeMapOpenSplit = 'h'
let g:NERDTreeMapOpenVSplit = 'v'
let g:NERDTreeMapJumpFirstChild = 'S'
let g:NERDTreeMapJumpLastChild = 'T'
let g:NERDTreeMapJumpNextSibling = '<C-N>'
let g:NERDTreeMapJumpPrevSibling = '<C-J>'

" ignore files in NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$']


""""""""""""""""""""""""""""""""""""""""""""""""""
" CtrlP for opening files easily
""""""""""""""""""""""""""""""""""""""""""""""""""
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_prompt_mappings = {
            \ 'PrtSelectMove("j")':   ['<c-t>', '<down>'],
            \ 'PrtSelectMove("k")':   ['<c-s>', '<up>'],
            \ 'AcceptSelection("h")': ['<c-x>', '<c-h>', '<c-cr>'],
            \ 'AcceptSelection("t")': ['<c-l>'],
            \ 'ToggleRegex()':        ['<c-è>'],
            \ 'PrtCurRight()':        ['<c-r>', '<right>'],
            \ 'PrtCurLeft()':         ['<c-c>', '<left>'],
            \ 'PrtExit()':            ['<esc>', '<c-q>', '<c-g>'],
            \ 'PrtSelectMove("t")':   ['<Home>', '<kHome>', '<c-^>'],
            \ 'PrtSelectMove("b")':   ['<End>', '<kEnd>', '<c-$>']
            \ }
" let g:ctrlp_user_command = ['.git/', 'git ls-files --cached --others  --exclude-standard %s']
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']
" use ctrl+t to open in a new tab
nnoremap à<C-P> :CtrlPBuffer<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""
" Bufexplorer : open a window to easily switch btw buffers
""""""""""""""""""""""""""""""""""""""""""""""""""
" change default mapping
function! s:NERDTreeChangeDefaultMapping()
    echo "OK"
    nmap <buffer> H <F1>
    nmap <buffer> l t
    nmap <buffer> h f
    nmap <buffer> è s
    nmap <buffer> É S
    unmap <buffer> s
    unmap <buffer> S
    unmap <buffer> t
    unmap <buffer> <F1>
endfunction

" mapping for calling
let g:bufExplorerSortBy='number'
nnoremap àà :BufExplorer<CR>
set hidden
set confirm

nnoremap <silent> àd :bd<CR>
nnoremap <silent> àw :bw<CR>
nnoremap <silent> àn :bn<CR>
nnoremap <silent> àp :bp<CR>
nnoremap <silent> àl :b#<CR>
nnoremap <silent> àm :bm<CR>


nnoremap <silent> à0 :BO<CR>


""""""""""""""""""""""""""""""""""""""""""""""""
" Dim inactive: dim inactive windows.
""""""""""""""""""""""""""""""""""""""""""""""""
let g:diminactive_enable_focus = 1


""""""""""""""""""""""""""""""""""""""""""""""""
" syntastic
""""""""""""""""""""""""""""""""""""""""""""""""
"set laststatus=2
"let g:syntastic_python_checkers = ['flake8']
" SyntasticToggleMode "Disable syntastic
" make sure pylint is installed in the virtualenv you use!


""""""""""""""""""""""""""""""""""""""""""""""""
" Validator: syntax checker
""""""""""""""""""""""""""""""""""""""""""""""""
set laststatus=2
let g:validator_python_checkers = ['flake8']

" For flake8
let g:validator_python_flake8_args = '--max-line-length=120'
"let g:validator_python_flake8_binary = '/Users/maralla/.dotfiles/virtualenvs/py27/bin/flake8'


""""""""""""""""""""""""""""""""""""""""""""""""""
" ALE : syntax check
""""""""""""""""""""""""""""""""""""""""""""""""""
" let g:ale_fixers = {
" \   'python': ['pylint'],
" \}


""""""""""""""""""""""""""""""""""""""""""""""
" You Complete Me
""""""""""""""""""""""""""""""""""""""""""""""

let g:ycm_filetype_whitelist = { 'cpp': 1, 'c': 1, 'python':1 }
" autoclose and go to definition
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>
" do not forget to have leader defined
"let g:ycm_server_python_interpreter = '/usr/bin/python3'
let g:ycm_server_python_interpreter = '/usr/bin/python'
let g:ycm_complete_in_comments = 1
"let g:ycm_goto_buffer_command = 'new-tab'
nnoremap èo :YcmCompleter GoTo<CR>
nnoremap èé :YcmCompleter GoToReferences<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""
" UltiSnips
""""""""""""""""""""""""""""""""""""""""""""""""""

" UltiSnips triggering
" Remap to avoid conflicts with YouCompletMe
let g:UltiSnipsExpandTrigger = 'èè'
let g:UltiSnipsJumpForwardTrigger = 'èè'
let g:UltiSnipsJumpBackwardTrigger = 'èo'
let g:UltiSnipsSnippetDirectories=[$HOME.'/.vim/UltiSnips']
"" Make UltiSnips compatible with YouCompleteMe
"function! g:UltiSnips_Complete()
"    call UltiSnips#ExpandSnippet()
"    if g:ulti_expand_res == 0
"        if pumvisible()
"            return "\<C-n>"
"        else
"            call UltiSnips#JumpForwards()
"            if g:ulti_jump_forwards_res == 0
"               return "\<TAB>"
"            endif
"        endif
"    endif
"    return ""
"endfunction
"
"au BufEnter * exec "inoremap <silent> " . g:UltiSnipsExpandTrigger . " <C-R>=g:UltiSnips_Complete()<cr>"
"let g:UltiSnipsJumpForwardTrigger="<tab>"
"let g:UltiSnipsListSnippets="<c-e>"
"" this mapping Enter key to <C-y> to chose the current highlight item
"" and close the selection list, same as other IDEs.
"" CONFLICT with some plugins like tpope/Endwise
"inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"


""""""""""""""""""""""""""""""""""""""""""""""""""
" Easy-motion
""""""""""""""""""""""""""""""""""""""""""""""""""

map é <Plug>(easymotion-prefix)
nmap éé <Plug>(easymotion-bd-f)
nmap éj <Plug>(easymotion-t)
nmap éJ <Plug>(easymotion-T)
nmap éw <Plug>(easymotion-w)
nmap éW <Plug>(easymotion-W)
nmap éàe <Plug>(easymotion-ge)
nmap éàE <Plug>(easymotion-gE)
nmap ét <Plug>(easymotion-j)
nmap és <Plug>(easymotion-w)
nmap ér <Plug>(easymotion-sn)
nmap éy <Plug>(easymotion-bd-t)
nmap éx <Plug>(easymotion-bd-n)
nmap é* <Plug>(easymotion-next)
nmap é# <Plug>(easymotion-prev)
nmap én <Plug>(easymotion-bd-n)
nmap é. <Plug>(easymotion-repeat)


""""""""""""""""""""""""""""""""""""""""""""""""""
" Fast and smooth movements
""""""""""""""""""""""""""""""""""""""""""""""""""
noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 0, 2)<CR>
noremap <silent> <c-d> :call smooth_scroll#down(&scroll, 0, 2)<CR>
noremap <silent> <c-b> :call smooth_scroll#up(&scroll*2, 0, 4)<CR>
noremap <silent> <c-f> :call smooth_scroll#down(&scroll*2, 0, 4)<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""
" Slime for sending code to ipython
""""""""""""""""""""""""""""""""""""""""""""""""""
let g:slime_python_ipython = 1 "delete -q in ftplugin/python/slime.vim
let g:slime_target = "tmux"
let g:slimux_select_from_current_window = 1
let g:slime_no_mappings = 1
vmap èy <Plug>SlimeRegionSend
nmap èy <Plug>SlimeLineSend
nmap èY <Plug>SlimeConfig|<Plug>SlimeLineSend
vmap èY <Plug>SlimeConfig|<Plug>SlimeRegionSend


""""""""""""""""""""""""""""""""""""""""""""""""""
" Vertical moving with indents
""""""""""""""""""""""""""""""""""""""""""""""""""

" vertically look for non-empty character
noremap <silent> <c-t> :Vertical f<CR>
noremap <silent> <c-s> :Vertical b<CR>
" require 'stty -ixon' in the .bashrc to disable the freezing behaviour of <c-s>


""""""""""""""""""""""""""""""""""""""""""""""""""
" Camel case and undercore motion and text objects
""""""""""""""""""""""""""""""""""""""""""""""""""
let g:bufExplorerDisableDefaultKeyMapping = 1  " Avoid conflicts for <leader>b… mapping

map <nowait> <space>w <Plug>CamelCaseMotion_w
map <nowait> <space>b <Plug>CamelCaseMotion_b
map <nowait> <space>e <Plug>CamelCaseMotion_e

omap i<space>w <Plug>CamelCaseMotion_iw
xmap i<space>w <Plug>CamelCaseMotion_iw
omap i<space>b <Plug>CamelCaseMotion_ib
xmap i<space>b <Plug>CamelCaseMotion_ib
omap i<space>e <Plug>CamelCaseMotion_ie
xmap i<space>e <Plug>CamelCaseMotion_ie


""""""""""""""""""""""""""""""""""""""""""""""""""
" Nerd commenter: comment and uncomment easily
""""""""""""""""""""""""""""""""""""""""""""""""""
map ècc <plug>NERDCommenterComment
map ècu <plug>NERDCommenterUncomment
map ècb <plug>NERDCommenterMinimal
map ècy <plug>NERDCommenterYank
map èc$ <plug>NERDCommenterToEOL
map <silent> èca A <esc>:execute "normal \<plug>NERDCommenterAppend"<CR>A

let NERDSpaceDelims=1
" need to change plugin:
" - remove space after # in python comment symbols to avoid a double space
"   after # (need to keep NERDSpaceDelims at 1 for double space before end
"   of line comment

"""""""""""""""""""""""""""""""""""""""""""""""""
" Vim surround refactor mapping for bépo
"""""""""""""""""""""""""""""""""""""""""""""""""
let g:surround_no_mappings = 1
let g:surround_no_insert_mappings = 1
nmap dk  <Plug>Dsurround
nmap lk  <Plug>Csurround
nmap lK  <Plug>CSurround
nmap yk  <Plug>Ysurround
nmap yK  <Plug>YSurround
nmap ykk <Plug>Yssurround
nmap yKk <Plug>YSsurround
nmap yKK <Plug>YSsurround
xmap K   <Plug>VSurround
xmap gK  <Plug>VgSurround

""""""""""""""""""""""""""""""""""""""""""""""""""
" Autopep 8, for automatic correction of python code
""""""""""""""""""""""""""""""""""""""""""""""""""
let g:autopep8_max_line_length=120


""""""""""""""""""""""""""""""""""""""""""""""""""
" Pylint for stronger error detection
""""""""""""""""""""""""""""""""""""""""""""""""""
let g:pylint_onwrite = 0
autocmd FileType python compiler pylint


""""""""""""""""""""""""""""""""""""""""""""""""""
" Vim fugitive for gitlab
""""""""""""""""""""""""""""""""""""""""""""""""""
let g:fugitive_gitlab_domains = ['https://gitlab.local.wandercraft.eu']
